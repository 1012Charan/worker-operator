make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Feb 28 12:14:38 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
SSH_AGENT_LAUNCHER = gnome-keyring
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-ffe6487d-e297-42d6-8c84-126cb9d58b7f.sock
# makefile (from 'Makefile', line 25)
BUNDLE_METADATA_OPTS = $(BUNDLE_CHANNELS) $(BUNDLE_DEFAULT_CHANNEL)
# environment
VSCODE_CWD = /home/infracloud
# environment
WINDOWPATH = 2
# default
MAKE_COMMAND := make
# environment
QT_ACCESSIBILITY = 1
# environment
GOPATH = /home/infracloud/go
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
THANOSBIN = /home/infracloud/Repos/thanos/.bin
# environment
CLOUDSDK_METRICS_ENVIRONMENT_VERSION = 1.17.0
# environment
VSCODE_BROWSER_CODE_LOADING = bypassHeatCheck
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/infracloud/Desktop/avesha-repo/kubeslice-operator
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/infracloud/.config/Code/CachedData/3866c3553be8b268c8a7f8c0482c0c0177aa8bfa
# makefile (from 'Makefile', line 36)
BUNDLE_IMG = $(IMAGE_TAG_BASE)-bundle:v$(VERSION)
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/infracloud/Desktop/avesha-repo/kubeslice-operator
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 6)
VERSION = 0.1.5
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# makefile (from 'Makefile', line 54)
.SHELLFLAGS = -ec
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"VSCode","submitURL":"appcenter://code?aid=fba07a4d-84bd-4fc8-a125-9640fc8ce171&uid=4b32687c-c2eb-4509-a663-f02a373e450d&iid=4b32687c-c2eb-4509-a663-f02a373e450d&sid=4b32687c-c2eb-4509-a663-f02a373e450d","uploadToServer":true}
# environment
XDG_SESSION_DESKTOP = ubuntu
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 262083
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 32)
IMAGE_TAG_BASE = avesha.io/kubeslice-operator
# makefile (from 'Makefile', line 162)
PROJECT_DIR := /home/infracloud/Desktop/avesha-repo/kubeslice-operator
# environment
SESSION_MANAGER = local/rahul-sawra:@/tmp/.ICE-unix/2511,unix/rahul-sawra:/tmp/.ICE-unix/2511
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 212)
CATALOG_IMG = $(IMAGE_TAG_BASE)-catalog:v$(VERSION)
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from 'Makefile', line 125)
ignore-not-found = false
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile', line 145)
CONTROLLER_GEN = $(shell pwd)/bin/controller-gen
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
BREAKPAD_DUMP_LOCATION = /home/infracloud/.config/Code/exthost Crash Reports
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# makefile (from 'Makefile', line 53)
SHELL = /usr/bin/env bash -o pipefail
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/infracloud/go/bin:/home/infracloud/go/bin:/usr/local/go:/home/infracloud/go:/home/infracloud/go/bin:/home/infracloud/Repos/thanos/.bin:/home/infracloud/.cache/cloud-code/installer/google-cloud-sdk/bin:/home/infracloud/google-cloud-sdk/bin
# makefile (from 'Makefile', line 150)
KUSTOMIZE = $(shell pwd)/bin/kustomize
# default
MAKEFILES := 
# environment
LANGUAGE = en_IN:en
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 41)
ENVTEST_K8S_VERSION = 1.22
# makefile (from 'Makefile', line 209)
BUNDLE_IMGS = $(BUNDLE_IMG)
# makefile (from 'Makefile', line 47)
GOBIN = $(shell go env GOBIN)
# environment
GOROOT = /usr/local/go
# environment
INVOCATION_ID = 81fe1857a6d04d27b8c69d219a546164
# environment
VSCODE_LOG_NATIVE = false
# environment
USERNAME = infracloud
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# automatic
?F = $(notdir $?)
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from 'Makefile', line 39)
IMG = nexus.dev.aveshalabs.io/kubeslice-operator:$(VERSION)
# environment
LS_COLORS = 
# automatic
+F = $(notdir $+)
# environment
DESKTOP_SESSION = ubuntu
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = infracloud
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile
.DEFAULT_GOAL := all
# environment
DISPLAY = :1
# environment
USER = infracloud
# environment
GTK_MODULES = gail:atk-bridge
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 1
# makefile (from 'Makefile', line 191)
OPM = ./bin/opm
# environment
MANAGERPID = 2272
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 262083
# environment
_ = /usr/share/code/code
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
JOURNAL_STREAM = 8:40069
# environment
GOMODCACHE = /home/infracloud/go/pkg/mod
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /home/infracloud
# environment
QT_IM_MODULE = ibus
# makefile (from 'Makefile', line 156)
ENVTEST = $(shell pwd)/bin/setup-envtest
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-40903a57-1.59.1-main.sock
# environment
IM_CONFIG_PHASE = 1
# environment
GOPROXY = https://proxy.golang.org,direct
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# environment
CLOUDSDK_METRICS_ENVIRONMENT = cloudcode.vscode
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
XDG_MENU_PREFIX = gnome-
# makefile (from 'Makefile', line 163)
go-get-tool = @[ -f $(1) ] || { set -e ; TMP_DIR=$$(mktemp -d) ; cd $$TMP_DIR ; go mod init tmp ; echo "Downloading $(2)" ; GOBIN=$(PROJECT_DIR)/bin go get $(2) ; rm -rf $$TMP_DIR ; }
# environment
GDMSESSION = ubuntu
# variable set hash-table stats:
# Load=125/1024=12%, Rehash=0, Collisions=6/192=3%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66306, inode 17703708): 27 files, no impossibilities.

# 27 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

 
# Files

deploy: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 138):
	cd config/manager && $(KUSTOMIZE) edit set image controller=${IMG}
	$(KUSTOMIZE) build config/default | kubectl apply -f -

chart-deploy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 120):
	## Deploy the artifacts using helm
	## Usage: make chart-deploy VALUESFILE=[valuesfilename]
	helm upgrade --install kubeslice -n kubeslice-system deploy/kubeslice-operator -f deploy/kubeslice-operator/values/${VALUESFILE}

catalog-build: opm
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 224):
	$(OPM) index add --container-tool docker --mode semver --tag $(CATALOG_IMG) --bundles $(BUNDLE_IMGS) $(FROM_INDEX_OPT)

opm:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 195):
	@{ \
	set -e ;\
	mkdir -p $(dir $(OPM)) ;\
	OS=$(shell go env GOOS) && ARCH=$(shell go env GOARCH) && \
	curl -sSLo $(OPM) https://github.com/operator-framework/operator-registry/releases/download/v1.19.1/$${OS}-$${ARCH}-opm ;\
	chmod +x $(OPM) ;\
	}

generate: controller-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 84):
	$(CONTROLLER_GEN) object:headerFile="hack/boilerplate.go.txt" paths="./..."

bundle: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 177):
	operator-sdk generate kustomize manifests -q
	cd config/manager && $(KUSTOMIZE) edit set image controller=$(IMG)
	$(KUSTOMIZE) build config/manifests | operator-sdk generate bundle -q --overwrite --version $(VERSION) $(BUNDLE_METADATA_OPTS)
	operator-sdk bundle validate ./bundle

undeploy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 143):
	$(KUSTOMIZE) build config/default | kubectl delete --ignore-not-found=$(ignore-not-found) -f -

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-02-25 18:36:02.768416395
#  File has been updated.
#  Successfully updated.

kustomize: manifests
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 153):
	$(call go-get-tool,$(KUSTOMIZE),sigs.k8s.io/kustomize/kustomize/v3@v3.8.7)
	kustomize build config/default > deploy/kubeslice-operator.yaml

uninstall: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 134):
	$(KUSTOMIZE) build config/crd | kubectl delete --ignore-not-found=$(ignore-not-found) -f -

envtest:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 159):
	$(call go-get-tool,$(ENVTEST),sigs.k8s.io/controller-runtime/tools/setup-envtest@latest)

# 'override' directive
controller-gen: .SHELLSTATUS := 0
controller-gen:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := controller-gen
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=9/32=28%, Rehash=0, Collisions=2/19=11%
#  recipe to execute (from 'Makefile', line 148):
	$(call go-get-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@v0.7.0)

bundle-build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 184):
	docker build -f bundle.Dockerfile -t $(BUNDLE_IMG) .

fmt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 88):
	go fmt ./...

bundle-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 188):
	$(MAKE) docker-push IMG=$(BUNDLE_IMG)

manifests: controller-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 80):
	$(CONTROLLER_GEN) rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=config/crd/bases

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: build
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%

run: manifests generate fmt vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 106):
	go run ./main.go

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 74):
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 92):
	go vet ./...

build: generate fmt vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 102):
	go build -o bin/manager main.go

test: manifests generate fmt vet envtest
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 96):
	KUBEBUILDER_ASSETS="$(shell $(ENVTEST) use $(ENVTEST_K8S_VERSION) -p path)" go test ./... -coverprofile cover.out

docker-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 114):
	docker push ${IMG}

install: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 130):
	$(KUSTOMIZE) build config/crd | kubectl apply -f -

docker-build: test
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 110):
	docker build -t ${IMG} .

catalog-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 229):
	$(MAKE) docker-push IMG=$(CATALOG_IMG)

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: all help manifests generate fmt vet test build run docker-build docker-push chart-deploy install uninstall deploy undeploy controller-gen kustomize envtest bundle bundle-build bundle-push opm catalog-build catalog-push
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=29/1024=3%, Rehash=0, Collisions=0/140=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 56 / storage = 488 B / avg = 8 B
# current buf: size = 8162 B / used = 488 B / count = 56 / avg = 8 B

# strcache performance: lookups = 188 / hit rate = 70%
# hash-table stats:
# Load=56/8192=1%, Rehash=0, Collisions=0/188=0%
# Finished Make data base on Mon Feb 28 12:14:38 2022

 
